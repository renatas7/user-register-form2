{"version":3,"sources":["blocks/form/form.module.scss","modals/formModal/formModal.module.scss","components/spinner/spinner.module.scss","components/buttons/button/button.module.scss","blocks/locationInput/locationInput.module.scss","components/paper/paper.module.scss","components/backdrop/backdrop.module.scss","components/input/input.module.scss","pages/home/home.module.scss","state/constants.js","state/form/formConstants.js","state/modals/ModalsConstants.js","state/actions.js","state/form/formActions.js","state/modals/ModalsActions.js","components/spinner/spinner.js","components/spinner/withSpinner.js","components/paper/paper.js","components/backdrop/backdrop.js","components/buttons/button/button.js","components/input/input.js","components/table/table.js","pages/home/home.js","state/form/formReducer.js","state/modals/ModalsReducer.js","state/reducers.js","utils/selectors/selectors.js","utils/helpers/helpers.js","state/form/formSaga.js","state/sagas.js","blocks/locationInput/locationInput.js","blocks/form/form.js","modals/formModal/formModal.js","App.js","utils/redux/store.js","serviceWorker.js","index.js","components/table/table.module.scss"],"names":["module","exports","validationMessage","actions","addressInline","inline","modal","close","title","content","container","spinner","button","icon","primary","dim","light","dark","outline","input","autocompleteDropdownDontainer","backdrop","constants","form","UPDATE_DASHBOARD_DATA","SET_ON_SYNC_FLAG","REGISTER_MODAL_OPEN","UPDATE_FILLING_FORM","ADD_USER","CLEAR_FORM","EDITING_USER_ID","SET_USER_DATA","PUSH_EDITED_USERS_DATA","FORM_NOT_VALID","PUSH_ADDRESS_DATA","UPDATE_ADDRESS_DATA","CLEAR_ADDRESS_DATA","ADDRESS_SELECTED","modals","SET_MODAL_VISIBLE_FLAG","updateDashboardAction","type","setUserOnSyncFlagAction","flag","setRegisterModalOpenAction","payload","formState","addUser","clearForm","editingUserId","setUserData","pushEditedUsersData","formNotValid","pushAddressData","updateAddressData","clearAddressData","addressSelected","setModalVisibleFlagAction","Spinner","react_default","a","createElement","className","styles","WithSpinner","_ref","loading","children","Paper","Backdrop","aria-hidden","Button","color","classes","rest","Object","objectWithoutProperties","assign","cn","defaultProps","Input","name","onChange","value","PropTypes","string","isRequired","func","oneOfType","number","Table","header","isEmpty","row","Array","from","length","main","table","role","headerRow","map","col","i","headerCell","key","headerTitle","body","emptyRow","_","table_TableCell","infoText","TableRow","_ref2","onClick","bodyRow","TableCell","_ref3","bodyCell","connect","state","usersList","isOnSync","dispatch","useEffect","rowClick","id","surname","email","street","house","city","country","zipCode","data","paper","button_button","withSpinner","table_TableRow","concat","INITIAL_STATE","userFormModalIsOpen","formData","addressUpdate","globalLoaderModalVisible","globalErrorModalVisible","globalInfoModalVisible","reducers","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","modalsState","modalName","defineProperty","visible","selectUsersList","selectFormData","formatAddressData","rawAddress","keys","long_name","short_name","updateFormSaga","setUserDataSaga","formatAddressDataSaga","userListData","parsedData","regenerator_default","wrap","_context","prev","next","put","localStorage","getItem","JSON","parse","t0","console","log","finish","stop","_marked","payloadData","datatoPush","_usersList","newData","newUsersList","_context2","values","some","x","Date","now","select","sent","setItem","stringify","_marked2","address","results","formatted","_context3","call","geocodeByAddress","address_components","_marked3","actionWatcher","rootSaga","takeLatest","sagas_marked","all","sagas_marked2","_useState","useState","_useState2","slicedToArray","setAddress","errorStyle","border","okStyle","dist_default","onSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","style","suggestion","active","backgroundColor","cursor","borderBottom","description","setValues","handleInputChange","_ref2$target","target","every","Fragment","locationInput","open","aria-modal","aria-labelledby","aria-describedby","form_form","App","home","formModal","sagaMiddleware","createSagaMiddleware","middlewares","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","enhancers","compose","applyMiddleware","apply","store","createStore","run","Boolean","location","hostname","match","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","footerRow","footerCell"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,kBAAA,gCAAAC,QAAA,sBAAAC,cAAA,4BAAAC,OAAA,0CCAlBL,EAAAC,QAAA,CAAkBK,MAAA,yBAAAC,MAAA,yBAAAC,MAAA,yBAAAC,QAAA,gDCAlBT,EAAAC,QAAA,CAAkBS,UAAA,2BAAAC,QAAA,8CCAlBX,EAAAC,QAAA,CAAkBW,OAAA,uBAAAC,KAAA,qBAAAC,QAAA,wBAAAC,IAAA,oBAAAC,MAAA,sBAAAC,KAAA,qBAAAC,QAAA,6CCAlBlB,EAAAC,QAAA,CAAkBkB,MAAA,6BAAAC,8BAAA,0ECAlBpB,EAAAC,QAAA,CAAkBS,UAAA,8CCAlBV,EAAAC,QAAA,CAAkBoB,SAAA,gDCAlBrB,EAAAC,QAAA,CAAkBkB,MAAA,0CCAlBnB,EAAAC,QAAA,CAAkBS,UAAA,6JCELY,SAAY,CACvBC,KCJ2B,CAC3BC,sBAAuB,6BACvBC,iBAAkB,wBAClBC,oBAAqB,2BACrBC,oBAAqB,2BACrBC,SAAU,gBACVC,WAAY,kBACZC,gBAAiB,uBACjBC,cAAe,qBACfC,uBAAwB,8BACxBC,eAAgB,wBAChBC,kBAAmB,2BACnBC,oBAAqB,6BACrBC,mBAAoB,4BACpBC,iBAAkB,2BDTlBC,OEL6B,CAC7BC,uBAAwB,mCCEbpC,EAAU,CACrBoB,KC6FyB,CACzBiB,sBAzF4B,WAC5B,MAAO,CACLC,KAAMnB,EAAUC,KAAKC,wBAwFvBkB,wBAjG8B,SAAAC,GAC9B,MAAO,CACLF,KAAMnB,EAAUC,KAAKE,iBACrBkB,SA+FFC,2BArFiC,SAAAC,GACjC,MAAO,CACLJ,KAAMnB,EAAUC,KAAKG,oBACrBmB,YAmFFC,UA/EgB,SAAAD,GAChB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKI,oBACrBkB,YA6EFE,QAzEc,SAAAF,GACd,MAAO,CACLJ,KAAMnB,EAAUC,KAAKK,SACrBiB,YAuEFG,UAnEgB,WAChB,MAAO,CACLP,KAAMnB,EAAUC,KAAKM,aAkEvBoB,cA9DoB,SAAAJ,GACpB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKO,gBACrBe,YA4DFK,YAxDkB,SAAAL,GAClB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKQ,cACrBc,YAsDFM,oBAlD0B,SAAAN,GAC1B,MAAO,CACLJ,KAAMnB,EAAUC,KAAKS,uBACrBa,YAgDFO,aA5CmB,SAAAP,GACnB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKU,eACrBY,YA0CFQ,gBAtCsB,SAAAR,GACtB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKW,kBACrBW,YAoCFS,kBAhCwB,SAAAT,GACxB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKY,oBACrBU,YA8BFU,iBA1BuB,WACvB,MAAO,CACLd,KAAMnB,EAAUC,KAAKa,qBAyBvBoB,gBArBsB,SAAAX,GACtB,MAAO,CACLJ,KAAMnB,EAAUC,KAAKc,iBACrBQ,aDxFFvC,MEI0B,CAC1BmD,0BARgC,SAAAZ,GAChC,MAAO,CACLJ,KAAMnB,EAAUgB,OAAOC,uBACvBM,+BCKWa,EANC,kBACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrD,WACrBiD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpD,YCMZqD,EARK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAZ,OAClBD,EAAUP,EAAAC,EAAAC,cAAClD,EAAD,MAAcwD,oBCOXC,EARD,SAAAH,GAAkB,IAAfE,EAAeF,EAAfE,SACf,OAAOR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrD,WAAYyD,qBCA7BE,EAFE,kBAAMV,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO1C,SAAUiD,cAAY,oDCE9DC,EAAS,SAAAN,GAA2C,IAAxCE,EAAwCF,EAAxCE,SAAUK,EAA8BP,EAA9BO,MAAOC,EAAuBR,EAAvBQ,QAAYC,EAAWC,OAAAC,EAAA,EAAAD,CAAAV,EAAA,gCACxD,OACEN,EAAAC,EAAAC,cAAA,SAAAc,OAAAE,OAAA,CACEf,UAAWgB,IAAGf,IAAOnD,OAAQmD,IAAOS,GAAQC,EAAQ7D,SAChD8D,GAEHP,IAKPI,EAAOQ,aAAe,CACpBN,QAAS,IAYIF,yCCzBTS,EAAQ,SAAAf,GAA8C,IAA3CgB,EAA2ChB,EAA3CgB,KAAMxC,EAAqCwB,EAArCxB,KAAMyC,EAA+BjB,EAA/BiB,SAAUC,EAAqBlB,EAArBkB,MAAUT,EAAWC,OAAAC,EAAA,EAAAD,CAAAV,EAAA,oCAC1D,OACEN,EAAAC,EAAAC,cAAA,QAAAc,OAAAE,OAAA,CACEf,UAAWC,IAAO5C,MAClB8D,KAAMA,EACNxC,KAAMA,EACNyC,SAAUA,EACVC,MAAOA,GACHT,KAKVM,EAAMD,aAAe,CACnBE,KAAMG,IAAUC,OAAOC,WACvBJ,SAAUE,IAAUG,KAAKD,WACzBH,MAAOC,IAAUI,UAAU,CACzBJ,IAAUC,OAAOC,WACjBF,IAAUK,OAAOH,aAChBA,YAGUN,wBCtBTU,EAAQ,SAAAzB,GAAmC,IAAhCE,EAAgCF,EAAhCE,SAAUwB,EAAsB1B,EAAtB0B,OAAQC,EAAc3B,EAAd2B,QAC3BC,EAAMC,MAAMC,KAAK,CAAEC,OAAQL,EAAOK,SAkBxC,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkC,MACrBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOmC,MAAOC,KAAK,QACjCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO4B,OAAQQ,KAAK,gBAClCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOqC,UAAWD,KAAK,OAnB7CR,EAAOU,IAAI,SAACC,EAAKC,GAAN,OACT5C,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOyC,WAAYC,IAAKF,EAAGJ,KAAK,gBAC/CxC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO2C,aAAcJ,QAqBrC3C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO4C,KAAMR,KAAK,gBAC/BhC,GAjBPyB,GACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO6C,UACpBf,EAAIQ,IAAI,SAACQ,EAAGN,GAAJ,OACP5C,EAAAC,EAAAC,cAACiD,EAAD,CAAWL,IAAKF,GAAhB,SAkBHX,GAAWjC,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOgD,UAArB,yBAKLC,EAAW,SAAAC,GAAA,IAAG9C,EAAH8C,EAAG9C,SAAU+C,EAAbD,EAAaC,QAAb,OACtBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOoD,QAASD,QAASA,EAASf,KAAK,OACpDhC,IAIQiD,EAAY,SAAAC,GAAA,IAAGlD,EAAHkD,EAAGlD,SAAH,OACvBR,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOuD,SAAUnB,KAAK,YACpChC,IAILuB,EAAMX,aAAe,CACnBa,SAAS,GASXoB,EAASjC,aAAe,CACtBmC,QAAS,cAQXE,EAAUrC,aAAe,CACvBZ,SAAU,MAOGuB,yBCoCA6B,cAtBS,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAM1E,UAAU2E,UAC3BvD,QAASsD,EAAM1E,UAAU4E,WAoBZH,CAtGF,SAAAtD,GAAsC,IAAnC0D,EAAmC1D,EAAnC0D,SAAUzD,EAAyBD,EAAzBC,QAASuD,EAAgBxD,EAAhBwD,UACjCG,oBAAU,WACRD,EAASxH,EAAQoB,KAAKiB,0BACrB,CAACmF,EAAUzD,IAEd,IAgCM2D,EAAW,SACfC,EACA7C,EACA8C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAO,CACXR,KACA7C,OACA8C,UACAC,QACAC,SACAC,QACAC,OACAC,UACAC,WAGFV,EAASxH,EAAQoB,KAAK0B,cAAc6E,IACpCH,EAASxH,EAAQoB,KAAKuB,UAAUwF,IAChCX,EAASxH,EAAQoB,KAAKqB,4BAA2B,KAEnD,OACEe,EAAAC,EAAAC,cAAC0E,EAAD,KACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrD,WACrBiD,EAAAC,EAAAC,cAAC2E,EAAD,CAAQhE,MAAM,UAAU0C,QA9Db,WACfS,EAASxH,EAAQoB,KAAKqB,4BAA2B,MA6D7C,iBAIFe,EAAAC,EAAAC,cAAC4E,EAAD,CAAavE,QAASA,GACpBP,EAAAC,EAAAC,cAACqC,EAAD,CAAOP,OA/DO,CAAC,OAAQ,UAAW,QAAS,WA+DfC,SAAU6B,EAAUzB,QA5DpDyB,EAAUpB,IACR,SAAAY,GAAA,IAAGa,EAAHb,EAAGa,GAAI7C,EAAPgC,EAAOhC,KAAM8C,EAAbd,EAAac,QAASC,EAAtBf,EAAsBe,MAAOC,EAA7BhB,EAA6BgB,OAAQC,EAArCjB,EAAqCiB,MAAOC,EAA5ClB,EAA4CkB,KAAMC,EAAlDnB,EAAkDmB,QAASC,EAA3DpB,EAA2DoB,QAA3D,OACE1E,EAAAC,EAAAC,cAAC6E,EAAD,CACEjC,IAAKqB,EACLZ,QAAS,kBACPW,EACEC,EACA7C,EACA8C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,KAIJ1E,EAAAC,EAAAC,cAACiD,EAAD,KAAY7B,GACZtB,EAAAC,EAAAC,cAACiD,EAAD,KAAYiB,GACZpE,EAAAC,EAAAC,cAACiD,EAAD,KAAYkB,GACZrE,EAAAC,EAAAC,cAACiD,EAAD,QAAA6B,OAAeV,EAAf,MAAAU,OAA0BT,EAA1B,MAAAS,OAAoCR,EAApC,MAAAQ,OAA6CP,EAA7C,MAAAO,OAAyDN,oEC7C7DO,EAAgB,CACpBlB,UAAU,EACVmB,qBAAqB,EACrBC,SAAU,CACRhB,GAAI,KACJ7C,KAAM,GACN8C,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,QAAS,IAEXpF,cAAe,KACfwE,UAAW,GACXrE,cAAc,EACd2F,cAAe,GACfvF,iBAAiB,GClBboF,EAAgB,CACpBI,0BAA0B,EAC1BC,yBAAyB,EACzBC,wBAAwB,GCDbC,EAAWC,YAAgB,CACtCtG,UFkByB,WAAmC,IAAlC0E,EAAkC6B,UAAArD,OAAA,QAAAsD,IAAAD,UAAA,GAAAA,UAAA,GAA1BT,EAAeW,EAAWF,UAAArD,OAAA,EAAAqD,UAAA,QAAAC,EAC5D,OAAQC,EAAO9G,MACb,KAAKnB,EAAUC,KAAKE,iBAClB,OAAOkD,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEE,SAAU6B,EAAO5G,OAErB,KAAKrB,EAAUC,KAAKG,oBAClB,OAAOiD,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEqB,oBAAqBU,EAAO1G,UAEhC,KAAKvB,EAAUC,KAAKI,oBAClB,OAAOgD,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEsB,SAASnE,OAAA6E,EAAA,EAAA7E,CAAA,GAAM4E,EAAO1G,WAE1B,KAAKvB,EAAUC,KAAKS,uBAClB,OAAO2C,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEC,UAAU9C,OAAA8E,EAAA,EAAA9E,CAAK4E,EAAO1G,WAE1B,KAAKvB,EAAUC,KAAKM,WAClB,OAAO8C,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEsB,SAAU,CACRhB,GAAI,KACJ7C,KAAM,GACN8C,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,QAAS,IAEXpF,cAAe,KACf8F,cAAe,GACfvF,iBAAiB,IAErB,KAAKlC,EAAUC,KAAKK,SAClB,OAAO+C,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEC,UAAS,GAAAkB,OAAAhE,OAAA8E,EAAA,EAAA9E,CAAM6C,EAAMC,WAAZ,CAAuB8B,EAAO1G,YAE3C,KAAKvB,EAAUC,KAAKO,gBAClB,OAAO6C,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEvE,cAAesG,EAAO1G,UAE1B,KAAKvB,EAAUC,KAAKU,eAClB,OAAO0C,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEpE,aAAcmG,EAAO1G,UAEzB,KAAKvB,EAAUC,KAAKY,oBAClB,OAAOwC,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEuB,cAAeQ,EAAO1G,UAE1B,KAAKvB,EAAUC,KAAKa,mBAClB,OAAOuC,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEuB,cAAe,KAEnB,KAAKzH,EAAUC,KAAKc,iBAClB,OAAOsC,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL,CAEEhE,gBAAiB+F,EAAO1G,UAE5B,QACE,OAAO2E,IExFXkC,YDE2B,WAAmC,IAAlClC,EAAkC6B,UAAArD,OAAA,QAAAsD,IAAAD,UAAA,GAAAA,UAAA,GAA1BT,EAAeW,EAAWF,UAAArD,OAAA,EAAAqD,UAAA,QAAAC,EAC9D,OAAQC,EAAO9G,MACb,KAAKnB,EAAUgB,OAAOC,uBAAtB,IACUM,EAAY0G,EAAZ1G,QACF4D,EAAM5D,EAAQ8G,UAAY,UAChC,OAAOhF,OAAA6E,EAAA,EAAA7E,CAAA,GACF6C,EADL7C,OAAAiF,EAAA,EAAAjF,CAAA,GAEG8B,EAAM5D,EAAQgH,UAEnB,QACE,OAAOrC,6BElBAsC,GAAkB,SAAAtC,GAAK,OAAIA,EAAM1E,UAAU2E,WAC3CsC,GAAiB,SAAAvC,GAAK,OAAIA,EAAM1E,UAAUgG,8BCD1CkB,GAAoB,SAAClB,EAAUmB,GAO1C,OAAQtF,OAAOuF,KAAKD,GAAYjE,QAC9B,KAAK,EACH8C,EAASV,QAAU6B,EAAW,GAAGE,UACjC,MACF,KAAK,EACHrB,EAASX,KAAO8B,EAAW,GAAGG,WAC9BtB,EAASV,QAAU6B,EAAW,GAAGE,UACjC,MACF,KAAK,EAKL,KAAK,EACHrB,EAASb,OAASgC,EAAW,GAAGG,WAChCtB,EAASX,KAAO8B,EAAW,GAAGG,WAC9BtB,EAASV,QAAU6B,EAAW,GAAGE,UACjC,MACF,KAAK,EACHrB,EAASb,OAASgC,EAAW,GAAGG,WAChCtB,EAASZ,MAAQ+B,EAAW,GAAGG,WAC/BtB,EAASX,KAAO8B,EAAW,GAAGG,WAC9BtB,EAASV,QAAU6B,EAAW,GAAGE,UACjCrB,EAAST,QAAU4B,EAAW,GAAGG,WAKrC,OAAOtB,eC1BCuB,gBAeAC,gBA4CAC,IA3DV,SAAUF,KAAV,IAAAG,EAAAC,EAAA,OAAAC,EAAA9G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,OAFJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAFnD,eAIyB4G,KADfkB,EAAeQ,aAAaC,QAAQ,eACS,OAAjBT,EAJtC,CAAAI,EAAAE,KAAA,QAMM,OADML,EAAaS,KAAKC,MAAMX,GALpCI,EAAAE,KAAA,EAMYC,YAAI5K,EAAQoB,KAAK4B,oBAAoBsH,IANjD,OAAAG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SASIS,QAAQC,IAARV,EAAAQ,IATJ,QAWI,OAXJR,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAWUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAXnD,eAAAkI,EAAAW,OAAA,6BAAAX,EAAAY,SAAAC,GAAA,qBAeA,SAAUnB,GAAgBf,GAA1B,IAAAmC,EAAAC,EAAAlE,EAAAmE,EAAA9C,EAAA+C,EAAAC,EAAA,OAAApB,EAAA9G,EAAA+G,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OAEI,OAFJiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAFnD,UAGUgJ,EAAcnC,EAAO1G,QACD8B,OAAOqH,OAAON,EAAYpD,MAAM2D,KACxD,SAAAC,GAAC,YAAU5C,IAAN4C,GAAyB,KAANA,IAL9B,CAAAH,EAAAjB,KAAA,YASwC,OAA9BY,EAAYzI,cATtB,CAAA8I,EAAAjB,KAAA,SAcQ,OAJMa,EAVdhH,OAAA6E,EAAA,EAAA7E,CAAA,CAWUmD,GAAIqE,KAAKC,OACNV,EAAYpD,MAZzByD,EAAAjB,KAAA,GAccC,YAAI5K,EAAQoB,KAAKwB,QAAQ4I,IAdvC,QAe0B,OAf1BI,EAAAjB,KAAA,GAegCuB,YAAOvC,IAfvC,QAiBQ,OAFMrC,EAfdsE,EAAAO,KAgBQtB,aAAauB,QAAQ,YAAarB,KAAKsB,UAAU/E,IAhBzDsE,EAAAjB,KAAA,GAiBcC,YAAI5K,EAAQoB,KAAK6B,cAAa,IAjB5C,QAAA2I,EAAAjB,KAAA,iBAmB0B,OAnB1BiB,EAAAjB,KAAA,GAmBgCuB,YAAOvC,IAnBvC,QAoByB,OADXrC,EAnBdsE,EAAAO,KAAAP,EAAAjB,KAAA,GAoB+BuB,YAAOtC,IApBtC,QA0BQ,OANMjB,EApBdiD,EAAAO,KAqBcT,EAAUpE,EAAUpB,IAAI,SAAAiC,GAAI,OAChCA,EAAKR,KAAO4D,EAAYzI,cAAxB0B,OAAA6E,EAAA,EAAA7E,CAAA,GACS2D,EAASQ,GACdR,IAxBdyD,EAAAjB,KAAA,GA0BcC,YAAI5K,EAAQoB,KAAK4B,oBAAoB0I,IA1BnD,QA2B6B,OA3B7BE,EAAAjB,KAAA,GA2BmCuB,YAAOvC,IA3B1C,QA2BcgC,EA3BdC,EAAAO,KA4BQtB,aAAauB,QAAQ,YAAarB,KAAKsB,UAAUV,IA5BzD,QA8BM,OA9BNC,EAAAjB,KAAA,GA8BYC,YAAI5K,EAAQoB,KAAKiB,yBA9B7B,QA+BM,OA/BNuJ,EAAAjB,KAAA,GA+BYC,YAAI5K,EAAQoB,KAAKyB,aA/B7B,QAgCM,OAhCN+I,EAAAjB,KAAA,GAgCYC,YAAI5K,EAAQoB,KAAKqB,4BAA2B,IAhCxD,QAiCM,OAjCNmJ,EAAAjB,KAAA,GAiCYC,YAAI5K,EAAQoB,KAAK6B,cAAa,IAjC1C,QAAA2I,EAAAjB,KAAA,iBAmCM,OAnCNiB,EAAAjB,KAAA,GAmCYC,YAAI5K,EAAQoB,KAAK6B,cAAa,IAnC1C,QAAA2I,EAAAjB,KAAA,iBAAAiB,EAAAlB,KAAA,GAAAkB,EAAAX,GAAAW,EAAA,SAsCIV,QAAQC,IAARS,EAAAX,IAtCJ,QAwCI,OAxCJW,EAAAlB,KAAA,GAAAkB,EAAAjB,KAAA,GAwCUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAxCnD,eAAAqJ,EAAAR,OAAA,6BAAAQ,EAAAP,SAAAiB,GAAA,qBA4CA,SAAUlC,GAAsBhB,GAAhC,IAAAmD,EAAA5D,EAAA6D,EAAA1C,EAAA2C,EAAA,OAAAlC,EAAA9G,EAAA+G,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAEI,OAFJ+B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAEUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAFnD,OAKoB,OAFVgK,EAAUnD,EAAO1G,QAAQ6J,QACzB5D,EAAWS,EAAO1G,QAAQyF,KAJpCuE,EAAA/B,KAAA,EAK0BgC,YAAKC,oBAAkBL,GALjD,OASI,OAJMC,EALVE,EAAAP,KAMUrC,EANVtF,OAAA6E,EAAA,EAAA7E,CAAA,GAM4BgI,EAAQ,GAAGK,oBAC7BJ,EAAY5C,GAAkBlB,EAAUmB,GAPlD4C,EAAA/B,KAAA,GASUC,YAAI5K,EAAQoB,KAAK+B,kBAAkBsJ,IAT7C,QAUI,OAVJC,EAAA/B,KAAA,GAUUC,YAAI5K,EAAQoB,KAAKiC,iBAAgB,IAV3C,QAAAqJ,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAzB,GAAAyB,EAAA,SAYIxB,QAAQC,IAARuB,EAAAzB,IAZJ,QAcI,OAdJyB,EAAAhC,KAAA,GAAAgC,EAAA/B,KAAA,GAcUC,YAAI5K,EAAQoB,KAAKmB,yBAAwB,IAdnD,eAAAmK,EAAAtB,OAAA,6BAAAsB,EAAArB,SAAAyB,GAAA,qCC3DUC,gBAMeC,IANzB,SAAUD,KAAV,OAAAxC,EAAA9G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQsC,YAAW9L,EAAUC,KAAKC,sBAAuB6I,IADzD,OAEE,OAFFO,EAAAE,KAAA,EAEQsC,YAAW9L,EAAUC,KAAKQ,cAAeuI,IAFjD,OAGE,OAHFM,EAAAE,KAAA,EAGQsC,YAAW9L,EAAUC,KAAKW,kBAAmBqI,IAHrD,wBAAAK,EAAAY,SAAA6B,IAMe,SAAUF,KAAV,OAAAzC,EAAA9G,EAAA+G,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACb,OADaiB,EAAAjB,KAAA,EACPwC,YAAI,CAACR,YAAKI,MADH,wBAAAnB,EAAAP,SAAA+B,gDCmFAhG,eArBS,SAAAC,GAAK,MAAK,CAChCc,KAAMd,EAAM1E,UAAUgG,SACtB7F,cAAeuE,EAAM1E,UAAUG,cAC/BG,aAAcoE,EAAM1E,UAAUM,eAkBjBmE,CA1FO,SAAAtD,GAAsC,IAAnCqE,EAAmCrE,EAAnCqE,KAAMX,EAA6B1D,EAA7B0D,SAAUvE,EAAmBa,EAAnBb,aAAmBoK,EAC5BC,mBAAS,IADmBC,EAAA/I,OAAAgJ,EAAA,EAAAhJ,CAAA6I,EAAA,GACnDd,EADmDgB,EAAA,GAC1CE,EAD0CF,EAAA,GAgBpDG,EAAa,CACjBC,OAAQ,qBAEJC,EAAU,CACdD,OAAQ,QAGV,OACEnK,EAAAC,EAAAC,cAACmK,GAAApK,EAAD,CACEuB,MAAOuH,EACPxH,SAvBiB,SAAAwH,GACnBkB,EAAWlB,IAuBTuB,SApBiB,SAAAvB,GACnB,IAAM7J,EAAU,CACd6J,UACApE,QAEFX,EAASxH,EAAQoB,KAAK8B,gBAAgBR,IACtC+K,EAAWlB,KAgBR,SAAAzF,GAAA,IAAGiH,EAAHjH,EAAGiH,cAAeC,EAAlBlH,EAAkBkH,YAAaC,EAA/BnH,EAA+BmH,uBAAwBlK,EAAvD+C,EAAuD/C,QAAvD,OACCP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACMqK,EAAc,CAChBG,YAAa,UACbvK,UAAWC,KAAO5C,MAClBmN,MAAOlL,GAA4B,KAAZsJ,EAAiBmB,EAAaE,KAGzDpK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO3C,+BACpB8C,GAAWP,EAAAC,EAAAC,cAAClD,EAAD,MACXwN,EAAY9H,IAAI,SAAAkI,GACf,IAAMD,EAAQC,EAAWC,OACrB,CACEC,gBAAiB,UACjBC,OAAQ,UACRC,aAAc,qBAEhB,CACEF,gBAAiB,UACjBC,OAAQ,UACRC,aAAc,qBAEpB,OACEhL,EAAAC,EAAAC,cAAA,MACMuK,EAAuBG,EAAY,CACrCD,UAGF3K,EAAAC,EAAAC,cAAA,YAAO0K,EAAWK,sBC0JrBrH,eAlCS,SAAAC,GAAK,MAAK,CAChCc,KAAMd,EAAM1E,UAAUgG,SACtB7F,cAAeuE,EAAM1E,UAAUG,cAC/BG,aAAcoE,EAAM1E,UAAUM,aAC9B2F,cAAevB,EAAM1E,UAAUiG,cAC/BvF,gBAAiBgE,EAAM1E,UAAUU,kBA6BpB+D,CAnNF,SAAAtD,GAOP,IANJqE,EAMIrE,EANJqE,KACAX,EAKI1D,EALJ0D,SACA1E,EAIIgB,EAJJhB,cACAG,EAGIa,EAHJb,aACA2F,EAEI9E,EAFJ8E,cACAvF,EACIS,EADJT,gBACIgK,EACwBC,mBAAS,CACnCxI,KAAoB,OAAdqD,EAAKrD,KAAgBqD,EAAKrD,KAAO,GACvC8C,QAA0B,OAAjBO,EAAKP,QAAmBO,EAAKP,QAAU,GAChDC,MAAsB,OAAfM,EAAKN,MAAiBM,EAAKN,MAAQ,GAC1CC,OAAwB,OAAhBK,EAAKL,OAAkBK,EAAKL,OAAS,GAC7CC,MAAsB,OAAfI,EAAKJ,MAAiBI,EAAKJ,MAAQ,GAC1CC,KAAoB,OAAdG,EAAKH,KAAgBG,EAAKH,KAAO,GACvCC,QAA0B,OAAjBE,EAAKF,QAAmBE,EAAKF,QAAU,GAChDC,QAA0B,OAAjBC,EAAKD,QAAmBC,EAAKD,QAAU,KAT9CqF,EAAA/I,OAAAgJ,EAAA,EAAAhJ,CAAA6I,EAAA,GACGxB,EADH0B,EAAA,GACWmB,EADXnB,EAAA,GAYEoB,EAAoB,SAAA7H,GAAiC,IAAA8H,EAAA9H,EAA9B+H,OAAU/J,EAAoB8J,EAApB9J,KAAME,EAAc4J,EAAd5J,MAC3C0J,EAAUlK,OAAA6E,EAAA,EAAA7E,CAAA,GAAKqH,EAANrH,OAAAiF,EAAA,EAAAjF,CAAA,GAAeM,EAAOE,MAGjCyC,oBAAU,WACJjD,OAAOuF,KAAKnB,GAAe/C,OAAS,IACtC6I,EAAU9F,GACVpB,EAASxH,EAAQoB,KAAKgC,qBAExB,IAAMuF,EAAW,CACf7D,KAAM+G,EAAO/G,KACb8C,QAASiE,EAAOjE,QAChBC,MAAOgE,EAAOhE,MACdC,OAAQ+D,EAAO/D,OACfC,MAAO8D,EAAO9D,MACdC,KAAM6D,EAAO7D,KACbC,QAAS4D,EAAO5D,QAChBC,QAAS2D,EAAO3D,SAGd1D,OAAOqH,OAAOlD,GAAUmG,MAAM,SAAA/C,GAAC,MAAU,KAANA,KACrCvE,EAASxH,EAAQoB,KAAK6B,cAAa,IAGrCuE,EAASxH,EAAQoB,KAAKuB,UAAUgG,KAC/B,CAACnB,EAAUqE,EAAQjD,IAEtB,IAcM8E,EAAa,CACjBC,OAAQ,qBAEJC,EAAU,CACdD,OAAQ,QAGV,OACEnK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1D,QACrBsD,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,OACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO/G,KACdoJ,YAAY,OACZC,MAAOlL,GAAgC,KAAhB4I,EAAO/G,KAAc4I,EAAaE,IAE3DpK,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,UACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAOjE,QACdsG,YAAY,UACZC,MAAOlL,GAAmC,KAAnB4I,EAAOjE,QAAiB8F,EAAaE,KAIhEpK,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,QACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAOhE,MACdqG,YAAY,QACZC,MAAOlL,GAAiC,KAAjB4I,EAAOhE,MAAe6F,EAAaE,IAE1DvK,GAAqC,OAAlBP,EAUnBU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsL,SAAA,KACEvL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO3D,eACrBuD,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,SACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO/D,OACdoG,YAAY,SACZC,MACElL,GAAkC,KAAlB4I,EAAO/D,OAAgB4F,EAAaE,IAGxDpK,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,QACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO9D,MACdmG,YAAY,QACZC,MAAOlL,GAAiC,KAAjB4I,EAAO9D,MAAe2F,EAAaE,KAG9DpK,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,OACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO7D,KACdkG,YAAY,OACZC,MAAOlL,GAAgC,KAAhB4I,EAAO7D,KAAc0F,EAAaE,IAE3DpK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1D,QACrBsD,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,UACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO5D,QACdiG,YAAY,UACZC,MACElL,GAAmC,KAAnB4I,EAAO5D,QAAiByF,EAAaE,IAGzDpK,EAAAC,EAAAC,cAAC1C,EAAD,CACE8D,KAAK,UACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAO3D,QACdgG,YAAY,WACZC,MACElL,GAAmC,KAAnB4I,EAAO3D,QAAiBwF,EAAaE,MAxD7DpK,EAAAC,EAAAC,cAACsL,GAAD,CACElK,KAAK,UACLxC,KAAK,SACLyC,SAAU4J,EACV3J,MAAO6G,EAAOU,QACd2B,YAAY,UACZC,MAAOlL,GAAmC,KAAnB4I,EAAOU,QAAiBmB,EAAaE,IAyDhEpK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO5D,SACrBwD,EAAAC,EAAAC,cAAC2E,EAAD,CAAQhE,MAAM,UAAU0C,QA7GjB,WACX,IAAMrE,EAAU,CACdyF,OACArF,iBAEF0E,EAASxH,EAAQoB,KAAK2B,YAAYL,MAwG9B,QAGAc,EAAAC,EAAAC,cAAC2E,EAAD,CAAQhE,MAAM,UAAU0C,QAtHf,WACbS,EAASxH,EAAQoB,KAAKqB,4BAA2B,IACjD+E,EAASxH,EAAQoB,KAAKyB,aACtB2E,EAASxH,EAAQoB,KAAK6B,cAAa,MAmH/B,WAIDA,GACCO,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,KAAO7D,mBAArB,qCCxIOqH,eAXS,SAAAC,GAAK,MAAK,CAChC4H,KAAM5H,EAAM1E,UAAU+F,oBACtB5F,cAAeuE,EAAM1E,UAAUG,gBASlBsE,CAnCG,SAAAtD,GAA6B,IAA1BmL,EAA0BnL,EAA1BmL,KAAMnM,EAAoBgB,EAApBhB,cACzB,OACEmM,GACEzL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsL,SAAA,KACEvL,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOzD,MAClBwH,GAAG,QACH3B,KAAK,SACLkJ,aAAW,OACXC,kBAAgB,eAChBC,mBAAiB,eAEjB5L,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOvD,MAAOsH,GAAG,gBACX,OAAlB7E,EAAyB,iBAAmB,iBAE/CU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtD,SACrBkD,EAAAC,EAAAC,cAAC2L,GAAD,QAGJ7L,EAAAC,EAAAC,cAACxC,EAAD,SCZOoO,OATf,WACE,OACE9L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6L,EAAD,MACA/L,EAAAC,EAAAC,cAAC8L,GAAD,iBCLAC,GAAiBC,eAEjBC,GAAc,CAACF,IAEfG,GACc,qBAAXC,QAA0BA,OAAOC,6BACpCD,OAAOC,+BACP,SAAAC,GAAC,OAAIA,GAELC,GAAYC,YAChBC,IAAeC,WAAf,EAAmBR,IACnBC,IAGIQ,GAAQC,YAAYrH,EAAUgH,IAEpCP,GAAea,IAAItD,IAEJoD,UCVKG,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCXNC,iBACEnN,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAUR,MAAOA,IACf5M,EAAAC,EAAAC,cAACmN,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBxR,EAAAC,QAAA,CAAkBgG,KAAA,oBAAAC,MAAA,qBAAAP,OAAA,sBAAAS,UAAA,yBAAAI,WAAA,0BAAAE,YAAA,2BAAAC,KAAA,oBAAAQ,QAAA,uBAAAG,SAAA,wBAAAmK,UAAA,yBAAAC,WAAA,0BAAA9K,SAAA,wBAAAG,SAAA","file":"static/js/main.59369803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationMessage\":\"form_validationMessage__qN93F\",\"actions\":\"form_actions__1J8LJ\",\"addressInline\":\"form_addressInline__2B1Ab\",\"inline\":\"form_inline__1yTzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"formModal_modal__1I3-v\",\"close\":\"formModal_close__20O2X\",\"title\":\"formModal_title__3Tt7u\",\"content\":\"formModal_content__3yZOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spinner_container__2PEFQ\",\"spinner\":\"spinner_spinner__rNRrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2wKvk\",\"icon\":\"button_icon__2qmpL\",\"primary\":\"button_primary__KwO3T\",\"dim\":\"button_dim__3y5mZ\",\"light\":\"button_light__1iBcq\",\"dark\":\"button_dark__3Q_X4\",\"outline\":\"button_outline__fnvuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"locationInput_input__gYoCt\",\"autocompleteDropdownDontainer\":\"locationInput_autocompleteDropdownDontainer__1F_bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"paper_container__ETdRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__BoU-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__Q80XR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__3vpxv\"};","import { formConstants } from './form/formConstants';\nimport { modalsConstants } from './modals/ModalsConstants';\n\nexport const constants = {\n  form: formConstants,\n  modals: modalsConstants,\n};\n","export const formConstants = {\n  UPDATE_DASHBOARD_DATA: 'form/UPDATE_DASHBOARD_DATA',\n  SET_ON_SYNC_FLAG: 'form/SET_ON_SYNC_FLAG',\n  REGISTER_MODAL_OPEN: 'form/REGISTER_MODAL_OPEN',\n  UPDATE_FILLING_FORM: 'form/UPDATE_FILLING_FORM',\n  ADD_USER: 'form/ADD_USER',\n  CLEAR_FORM: 'form/CLEAR_FORM',\n  EDITING_USER_ID: 'form/EDITING_USER_ID',\n  SET_USER_DATA: 'form/SET_USER_DATA',\n  PUSH_EDITED_USERS_DATA: 'form/PUSH_EDITED_USERS_DATA',\n  FORM_NOT_VALID: './form/FORM_NOT_VALID',\n  PUSH_ADDRESS_DATA: './form/PUSH_ADDRESS_DATA',\n  UPDATE_ADDRESS_DATA: './form/UPDATE_ADDRESS_DATA',\n  CLEAR_ADDRESS_DATA: './form/CLEAR_ADDRESS_DATA',\n  ADDRESS_SELECTED: './form/ADDRESS_SELECTED',\n};\n","export const modalsConstants = {\n  SET_MODAL_VISIBLE_FLAG: 'modals/SET_MODAL_VISIBLE_FLAG',\n};\n","import { userActions } from './form/formActions';\nimport { modalActions } from './modals/ModalsActions';\n\nexport const actions = {\n  form: userActions,\n  modal: modalActions,\n};\n","import { constants } from '../constants';\n\nconst setUserOnSyncFlagAction = flag => {\n  return {\n    type: constants.form.SET_ON_SYNC_FLAG,\n    flag,\n  };\n};\n\nconst updateDashboardAction = () => {\n  return {\n    type: constants.form.UPDATE_DASHBOARD_DATA,\n  };\n};\n\nconst setRegisterModalOpenAction = payload => {\n  return {\n    type: constants.form.REGISTER_MODAL_OPEN,\n    payload,\n  };\n};\n\nconst formState = payload => {\n  return {\n    type: constants.form.UPDATE_FILLING_FORM,\n    payload,\n  };\n};\n\nconst addUser = payload => {\n  return {\n    type: constants.form.ADD_USER,\n    payload,\n  };\n};\n\nconst clearForm = () => {\n  return {\n    type: constants.form.CLEAR_FORM,\n  };\n};\n\nconst editingUserId = payload => {\n  return {\n    type: constants.form.EDITING_USER_ID,\n    payload,\n  };\n};\n\nconst setUserData = payload => {\n  return {\n    type: constants.form.SET_USER_DATA,\n    payload,\n  };\n};\n\nconst pushEditedUsersData = payload => {\n  return {\n    type: constants.form.PUSH_EDITED_USERS_DATA,\n    payload,\n  };\n};\n\nconst formNotValid = payload => {\n  return {\n    type: constants.form.FORM_NOT_VALID,\n    payload,\n  };\n};\n\nconst pushAddressData = payload => {\n  return {\n    type: constants.form.PUSH_ADDRESS_DATA,\n    payload,\n  };\n};\n\nconst updateAddressData = payload => {\n  return {\n    type: constants.form.UPDATE_ADDRESS_DATA,\n    payload,\n  };\n};\n\nconst clearAddressData = () => {\n  return {\n    type: constants.form.CLEAR_ADDRESS_DATA,\n  };\n};\n\nconst addressSelected = payload => {\n  return {\n    type: constants.form.ADDRESS_SELECTED,\n    payload,\n  };\n};\n\nexport const userActions = {\n  updateDashboardAction,\n  setUserOnSyncFlagAction,\n  setRegisterModalOpenAction,\n  formState,\n  addUser,\n  clearForm,\n  editingUserId,\n  setUserData,\n  pushEditedUsersData,\n  formNotValid,\n  pushAddressData,\n  updateAddressData,\n  clearAddressData,\n  addressSelected,\n};\n","import { constants } from '../constants';\n\nconst setModalVisibleFlagAction = payload => {\n  return {\n    type: constants.modals.SET_MODAL_VISIBLE_FLAG,\n    payload,\n  };\n};\n\nexport const modalActions = {\n  setModalVisibleFlagAction,\n};\n","import React from 'react';\n\nimport styles from './spinner.module.scss';\n\nconst Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.spinner} />\n  </div>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport Spinner from './spinner';\nimport PropTypes from 'prop-types';\n\nconst WithSpinner = ({ loading, children }) =>\n  loading ? <Spinner /> : children;\n\nWithSpinner.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default WithSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './paper.module.scss';\n\nconst Paper = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nPaper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Paper;\n","import React from 'react';\nimport styles from './backdrop.module.scss';\n\nconst Backdrop = () => <div className={styles.backdrop} aria-hidden=\"true\" />;\n\nexport default Backdrop;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nconst Button = ({ children, color, classes, ...rest }) => {\n  return (\n    <button\n      className={cn(styles.button, styles[color], classes.button)}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  classes: {},\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  color: PropTypes.oneOf(['primary', 'dim', 'light', 'dark', 'outline'])\n    .isRequired,\n  classes: PropTypes.shape({\n    button: PropTypes.string,\n  }),\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './input.module.scss';\n\nconst Input = ({ name, type, onChange, value, ...rest }) => {\n  return (\n    <input\n      className={styles.input}\n      name={name}\n      type={type}\n      onChange={onChange}\n      value={value}\n      {...rest}\n    />\n  );\n};\n\nInput.defaultProps = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]).isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './table.module.scss';\n\nconst Table = ({ children, header, isEmpty }) => {\n  const row = Array.from({ length: header.length });\n\n  const renderHeader = () =>\n    header.map((col, i) => (\n      <span className={styles.headerCell} key={i} role=\"columnheader\">\n        <div className={styles.headerTitle}>{col}</div>\n      </span>\n    ));\n\n  const renderEmptyRow = () =>\n    isEmpty && (\n      <div className={styles.emptyRow}>\n        {row.map((_, i) => (\n          <TableCell key={i}> </TableCell>\n        ))}\n      </div>\n    );\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.table} role=\"grid\">\n        <div className={styles.header} role=\"presentation\">\n          <div className={styles.headerRow} role=\"row\">\n            {renderHeader()}\n          </div>\n        </div>\n        <div className={styles.body} role=\"presentation\">\n          {children}\n        </div>\n        {renderEmptyRow()}\n      </div>\n      {isEmpty && <p className={styles.infoText}> User list is empty</p>}\n    </div>\n  );\n};\n\nexport const TableRow = ({ children, onClick }) => (\n  <div className={styles.bodyRow} onClick={onClick} role=\"row\">\n    {children}\n  </div>\n);\n\nexport const TableCell = ({ children }) => (\n  <span className={styles.bodyCell} role=\"gridcell\">\n    {children}\n  </span>\n);\n\nTable.defaultProps = {\n  isEmpty: false,\n};\n\nTable.propTypes = {\n  children: PropTypes.node.isRequired,\n  header: PropTypes.array.isRequired,\n  isEmpty: PropTypes.bool.isRequired,\n};\n\nTableRow.defaultProps = {\n  onClick: () => {},\n};\n\nTableRow.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nTableCell.defaultProps = {\n  children: null,\n};\n\nTableCell.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Table;\n","import React, { useEffect } from 'react';\nimport { actions } from './../../state/actions';\nimport { connect } from 'react-redux';\nimport {\n  WithSpinner,\n  Paper,\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n} from './../../components';\nimport styles from './home.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Home = ({ dispatch, loading, usersList }) => {\n  useEffect(() => {\n    dispatch(actions.form.updateDashboardAction());\n  }, [dispatch, loading]);\n\n  const openForm = () => {\n    dispatch(actions.form.setRegisterModalOpenAction(true));\n  };\n\n  const tableHeader = ['Name', 'Surname', 'Email', 'Address'];\n\n  const renderTable = () =>\n    usersList.map(\n      ({ id, name, surname, email, street, house, city, country, zipCode }) => (\n        <TableRow\n          key={id}\n          onClick={() =>\n            rowClick(\n              id,\n              name,\n              surname,\n              email,\n              street,\n              house,\n              city,\n              country,\n              zipCode\n            )\n          }\n        >\n          <TableCell>{name}</TableCell>\n          <TableCell>{surname}</TableCell>\n          <TableCell>{email}</TableCell>\n          <TableCell>{`${street}, ${house}, ${city}, ${country}, ${zipCode}`}</TableCell>\n        </TableRow>\n      )\n    );\n  const rowClick = (\n    id,\n    name,\n    surname,\n    email,\n    street,\n    house,\n    city,\n    country,\n    zipCode\n  ) => {\n    const data = {\n      id,\n      name,\n      surname,\n      email,\n      street,\n      house,\n      city,\n      country,\n      zipCode,\n    };\n\n    dispatch(actions.form.editingUserId(id));\n    dispatch(actions.form.formState(data));\n    dispatch(actions.form.setRegisterModalOpenAction(true));\n  };\n  return (\n    <Paper>\n      <div className={styles.container}>\n        <Button color=\"primary\" onClick={openForm}>\n          Add New User\n        </Button>\n      </div>\n      <WithSpinner loading={loading}>\n        <Table header={tableHeader} isEmpty={!usersList.length}>\n          {renderTable()}\n        </Table>\n      </WithSpinner>\n    </Paper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  usersList: state.formState.usersList,\n  loading: state.formState.isOnSync,\n});\n\nHome.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  usersList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      surname: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      street: PropTypes.string.isRequired,\n      house: PropTypes.string.isRequired,\n      city: PropTypes.string.isRequired,\n      country: PropTypes.string.isRequired,\n      zipCode: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default connect(mapStateToProps)(Home);\n","import { constants } from '../constants';\n\nconst INITIAL_STATE = {\n  isOnSync: false,\n  userFormModalIsOpen: false,\n  formData: {\n    id: null,\n    name: '',\n    surname: '',\n    email: '',\n    street: '',\n    house: '',\n    city: '',\n    country: '',\n    zipCode: '',\n  },\n  editingUserId: null,\n  usersList: [],\n  formNotValid: false,\n  addressUpdate: {},\n  addressSelected: false,\n};\n\nexport const userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case constants.form.SET_ON_SYNC_FLAG:\n      return {\n        ...state,\n        isOnSync: action.flag,\n      };\n    case constants.form.REGISTER_MODAL_OPEN:\n      return {\n        ...state,\n        userFormModalIsOpen: action.payload,\n      };\n    case constants.form.UPDATE_FILLING_FORM:\n      return {\n        ...state,\n        formData: { ...action.payload },\n      };\n    case constants.form.PUSH_EDITED_USERS_DATA:\n      return {\n        ...state,\n        usersList: [...action.payload],\n      };\n    case constants.form.CLEAR_FORM:\n      return {\n        ...state,\n        formData: {\n          id: null,\n          name: '',\n          surname: '',\n          email: '',\n          street: '',\n          house: '',\n          city: '',\n          country: '',\n          zipCode: '',\n        },\n        editingUserId: null,\n        addressUpdate: {},\n        addressSelected: false,\n      };\n    case constants.form.ADD_USER:\n      return {\n        ...state,\n        usersList: [...state.usersList, action.payload],\n      };\n    case constants.form.EDITING_USER_ID:\n      return {\n        ...state,\n        editingUserId: action.payload,\n      };\n    case constants.form.FORM_NOT_VALID:\n      return {\n        ...state,\n        formNotValid: action.payload,\n      };\n    case constants.form.UPDATE_ADDRESS_DATA:\n      return {\n        ...state,\n        addressUpdate: action.payload,\n      };\n    case constants.form.CLEAR_ADDRESS_DATA:\n      return {\n        ...state,\n        addressUpdate: {},\n      };\n    case constants.form.ADDRESS_SELECTED:\n      return {\n        ...state,\n        addressSelected: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { constants } from '../constants';\n\nconst INITIAL_STATE = {\n  globalLoaderModalVisible: false,\n  globalErrorModalVisible: false,\n  globalInfoModalVisible: false,\n};\n\nexport const modalsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case constants.modals.SET_MODAL_VISIBLE_FLAG:\n      const { payload } = action;\n      const key = payload.modalName + 'Visible';\n      return {\n        ...state,\n        [key]: payload.visible,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { userReducer } from './form/formReducer';\nimport { modalsReducer } from './modals/ModalsReducer';\n\nexport const reducers = combineReducers({\n  formState: userReducer,\n  modalsState: modalsReducer,\n});\n","export const selectUsersList = state => state.formState.usersList;\nexport const selectFormData = state => state.formState.formData;\n","export const formatAddressData = (formData, rawAddress) => {\n  /******\n   * Todo:\n   * crete cleaner solution insted of parising and pushing\n   * data from google geolocation input\n   ******/\n\n  switch (Object.keys(rawAddress).length) {\n    case 1:\n      formData.country = rawAddress[0].long_name;\n      break;\n    case 4:\n      formData.city = rawAddress[0].short_name;\n      formData.country = rawAddress[3].long_name;\n      break;\n    case 5:\n      formData.street = rawAddress[0].short_name;\n      formData.city = rawAddress[1].short_name;\n      formData.country = rawAddress[4].long_name;\n      break;\n    case 6:\n      formData.street = rawAddress[0].short_name;\n      formData.city = rawAddress[1].short_name;\n      formData.country = rawAddress[4].long_name;\n      break;\n    case 7:\n      formData.street = rawAddress[1].short_name;\n      formData.house = rawAddress[0].short_name;\n      formData.city = rawAddress[2].short_name;\n      formData.country = rawAddress[5].long_name;\n      formData.zipCode = rawAddress[6].short_name;\n      break;\n    default:\n      break;\n  }\n  return formData;\n};\n","import { actions } from '../actions';\nimport { put, select, call } from 'redux-saga/effects';\nimport {\n  selectUsersList,\n  selectFormData,\n} from './../../utils/selectors/selectors';\nimport { geocodeByAddress } from 'react-places-autocomplete';\nimport { formatAddressData } from './../../utils/helpers/helpers';\n\nfunction* updateFormSaga() {\n  try {\n    yield put(actions.form.setUserOnSyncFlagAction(true));\n    const userListData = localStorage.getItem('usersList');\n    if (userListData !== undefined && userListData !== null) {\n      const parsedData = JSON.parse(userListData);\n      yield put(actions.form.pushEditedUsersData(parsedData));\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    yield put(actions.form.setUserOnSyncFlagAction(false));\n  }\n}\n\nfunction* setUserDataSaga(action) {\n  try {\n    yield put(actions.form.setUserOnSyncFlagAction(true));\n    const payloadData = action.payload;\n    const allfeeldAreFilled = Object.values(payloadData.data).some(\n      x => x === undefined || x === ''\n    );\n\n    if (!allfeeldAreFilled) {\n      if (payloadData.editingUserId === null) {\n        const datatoPush = {\n          id: Date.now(), // for creating unique id\n          ...payloadData.data,\n        };\n        yield put(actions.form.addUser(datatoPush));\n        const usersList = yield select(selectUsersList);\n        localStorage.setItem('usersList', JSON.stringify(usersList));\n        yield put(actions.form.formNotValid(false));\n      } else {\n        const usersList = yield select(selectUsersList);\n        const formData = yield select(selectFormData);\n        const newData = usersList.map(data =>\n          data.id === payloadData.editingUserId\n            ? { ...data, ...formData }\n            : data\n        );\n        yield put(actions.form.pushEditedUsersData(newData));\n        const newUsersList = yield select(selectUsersList);\n        localStorage.setItem('usersList', JSON.stringify(newUsersList));\n      }\n      yield put(actions.form.updateDashboardAction());\n      yield put(actions.form.clearForm());\n      yield put(actions.form.setRegisterModalOpenAction(false));\n      yield put(actions.form.formNotValid(false));\n    } else {\n      yield put(actions.form.formNotValid(true));\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    yield put(actions.form.setUserOnSyncFlagAction(false));\n  }\n}\n\nfunction* formatAddressDataSaga(action) {\n  try {\n    yield put(actions.form.setUserOnSyncFlagAction(true));\n    const address = action.payload.address;\n    const formData = action.payload.data;\n    const results = yield call(geocodeByAddress, address);\n    const rawAddress = { ...results[0].address_components };\n    const formatted = formatAddressData(formData, rawAddress);\n\n    yield put(actions.form.updateAddressData(formatted));\n    yield put(actions.form.addressSelected(true));\n  } catch (error) {\n    console.log(error);\n  } finally {\n    yield put(actions.form.setUserOnSyncFlagAction(false));\n  }\n}\n\nexport { updateFormSaga, setUserDataSaga, formatAddressDataSaga };\n","import { constants } from './constants';\nimport { takeLatest, all, call } from 'redux-saga/effects';\n\nimport {\n  updateFormSaga,\n  setUserDataSaga,\n  formatAddressDataSaga,\n} from './form/formSaga';\n\nfunction* actionWatcher() {\n  yield takeLatest(constants.form.UPDATE_DASHBOARD_DATA, updateFormSaga);\n  yield takeLatest(constants.form.SET_USER_DATA, setUserDataSaga);\n  yield takeLatest(constants.form.PUSH_ADDRESS_DATA, formatAddressDataSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([call(actionWatcher)]);\n}\n","import React, { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { connect } from 'react-redux';\nimport { actions } from './../../state';\nimport styles from './locationInput.module.scss';\nimport { Spinner } from '../../components';\nimport PropTypes from 'prop-types';\n\nconst LocationInput = ({ data, dispatch, formNotValid }) => {\n  const [address, setAddress] = useState('');\n\n  const handleChange = address => {\n    setAddress(address);\n  };\n\n  const handleSelect = address => {\n    const payload = {\n      address,\n      data,\n    };\n    dispatch(actions.form.pushAddressData(payload));\n    setAddress(address);\n  };\n\n  const errorStyle = {\n    border: '1px solid #d22d2d',\n  };\n  const okStyle = {\n    border: 'none',\n  };\n\n  return (\n    <PlacesAutocomplete\n      value={address}\n      onChange={handleChange}\n      onSelect={handleSelect}\n    >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <div>\n          <input\n            {...getInputProps({\n              placeholder: 'Address',\n              className: styles.input,\n              style: formNotValid && address === '' ? errorStyle : okStyle,\n            })}\n          />\n          <div className={styles.autocompleteDropdownDontainer}>\n            {loading && <Spinner />}\n            {suggestions.map(suggestion => {\n              const style = suggestion.active\n                ? {\n                    backgroundColor: '#ebeaeb',\n                    cursor: 'pointer',\n                    borderBottom: '1px solid #ebeaeb',\n                  }\n                : {\n                    backgroundColor: '#ffffff',\n                    cursor: 'pointer',\n                    borderBottom: '1px solid #ebeaeb',\n                  };\n              return (\n                <div\n                  {...getSuggestionItemProps(suggestion, {\n                    style,\n                  })}\n                >\n                  <span>{suggestion.description}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </PlacesAutocomplete>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.formState.formData,\n  editingUserId: state.formState.editingUserId,\n  formNotValid: state.formState.formNotValid,\n});\n\nLocationInput.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    surname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    street: PropTypes.string.isRequired,\n    house: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    zipCode: PropTypes.string.isRequired,\n  }),\n  formNotValid: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(LocationInput);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from './../../state';\nimport { Input } from './../../components';\nimport styles from './form.module.scss';\nimport PropTypes from 'prop-types';\nimport { Button } from './../../components';\nimport LocationInput from './../locationInput/locationInput';\n\nconst Form = ({\n  data,\n  dispatch,\n  editingUserId,\n  formNotValid,\n  addressUpdate,\n  addressSelected,\n}) => {\n  const [values, setValues] = useState({\n    name: data.name !== null ? data.name : '',\n    surname: data.surname !== null ? data.surname : '',\n    email: data.email !== null ? data.email : '',\n    street: data.street !== null ? data.street : '',\n    house: data.house !== null ? data.house : '',\n    city: data.city !== null ? data.city : '',\n    country: data.country !== null ? data.country : '',\n    zipCode: data.zipCode !== null ? data.zipCode : '',\n  });\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setValues({ ...values, [name]: value });\n  };\n\n  useEffect(() => {\n    if (Object.keys(addressUpdate).length > 0) {\n      setValues(addressUpdate);\n      dispatch(actions.form.clearAddressData());\n    }\n    const formData = {\n      name: values.name,\n      surname: values.surname,\n      email: values.email,\n      street: values.street,\n      house: values.house,\n      city: values.city,\n      country: values.country,\n      zipCode: values.zipCode,\n    };\n\n    if (Object.values(formData).every(x => x !== '')) {\n      dispatch(actions.form.formNotValid(false));\n    }\n\n    dispatch(actions.form.formState(formData));\n  }, [dispatch, values, addressUpdate]);\n\n  const cancel = () => {\n    dispatch(actions.form.setRegisterModalOpenAction(false));\n    dispatch(actions.form.clearForm());\n    dispatch(actions.form.formNotValid(false));\n  };\n\n  const save = () => {\n    const payload = {\n      data,\n      editingUserId,\n    };\n    dispatch(actions.form.setUserData(payload));\n  };\n\n  const errorStyle = {\n    border: '1px solid #d22d2d',\n  };\n  const okStyle = {\n    border: 'none',\n  };\n\n  return (\n    <div>\n      <div className={styles.inline}>\n        <Input\n          name=\"name\"\n          type=\"string\"\n          onChange={handleInputChange}\n          value={values.name}\n          placeholder=\"Name\"\n          style={formNotValid && values.name === '' ? errorStyle : okStyle}\n        />\n        <Input\n          name=\"surname\"\n          type=\"string\"\n          onChange={handleInputChange}\n          value={values.surname}\n          placeholder=\"Surname\"\n          style={formNotValid && values.surname === '' ? errorStyle : okStyle}\n        />\n      </div>\n\n      <Input\n        name=\"email\"\n        type=\"string\"\n        onChange={handleInputChange}\n        value={values.email}\n        placeholder=\"Email\"\n        style={formNotValid && values.email === '' ? errorStyle : okStyle}\n      />\n      {!addressSelected && editingUserId === null ? (\n        <LocationInput\n          name=\"address\"\n          type=\"string\"\n          onChange={handleInputChange}\n          value={values.address}\n          placeholder=\"Address\"\n          style={formNotValid && values.address === '' ? errorStyle : okStyle}\n        />\n      ) : (\n        <>\n          <div className={styles.addressInline}>\n            <Input\n              name=\"street\"\n              type=\"string\"\n              onChange={handleInputChange}\n              value={values.street}\n              placeholder=\"Street\"\n              style={\n                formNotValid && values.street === '' ? errorStyle : okStyle\n              }\n            />\n            <Input\n              name=\"house\"\n              type=\"string\"\n              onChange={handleInputChange}\n              value={values.house}\n              placeholder=\"House\"\n              style={formNotValid && values.house === '' ? errorStyle : okStyle}\n            />\n          </div>\n          <Input\n            name=\"city\"\n            type=\"string\"\n            onChange={handleInputChange}\n            value={values.city}\n            placeholder=\"City\"\n            style={formNotValid && values.city === '' ? errorStyle : okStyle}\n          />\n          <div className={styles.inline}>\n            <Input\n              name=\"country\"\n              type=\"string\"\n              onChange={handleInputChange}\n              value={values.country}\n              placeholder=\"Country\"\n              style={\n                formNotValid && values.country === '' ? errorStyle : okStyle\n              }\n            />\n            <Input\n              name=\"zipCode\"\n              type=\"string\"\n              onChange={handleInputChange}\n              value={values.zipCode}\n              placeholder=\"Zip code\"\n              style={\n                formNotValid && values.zipCode === '' ? errorStyle : okStyle\n              }\n            />\n          </div>\n        </>\n      )}\n\n      <div className={styles.actions}>\n        <Button color=\"primary\" onClick={save}>\n          Save\n        </Button>\n        <Button color=\"outline\" onClick={cancel}>\n          Cancel\n        </Button>\n      </div>\n      {formNotValid && (\n        <p className={styles.validationMessage}>\n          All form fields must be filled\n        </p>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.formState.formData,\n  editingUserId: state.formState.editingUserId,\n  formNotValid: state.formState.formNotValid,\n  addressUpdate: state.formState.addressUpdate,\n  addressSelected: state.formState.addressSelected,\n});\n\nForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    surname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    street: PropTypes.string.isRequired,\n    house: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    zipCode: PropTypes.string.isRequired,\n  }),\n  formNotValid: PropTypes.bool.isRequired,\n  addressUpdate: PropTypes.shape({\n    name: PropTypes.string,\n    surname: PropTypes.string,\n    email: PropTypes.string,\n    street: PropTypes.string,\n    house: PropTypes.string,\n    city: PropTypes.string,\n    country: PropTypes.string,\n    zipCode: PropTypes.string,\n  }),\n  addressSelected: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './formModal.module.scss';\nimport { Backdrop } from './../../components';\nimport Form from './../../blocks/form/form';\nimport PropTypes from 'prop-types';\n\nconst FormModal = ({ open, editingUserId }) => {\n  return (\n    open && (\n      <>\n        <div\n          className={styles.modal}\n          id=\"modal\"\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-labelledby=\"modal__title\"\n          aria-describedby=\"modal__desc\"\n        >\n          <h3 className={styles.title} id=\"modal__title\">\n            {editingUserId !== null ? 'Edit user data' : 'Fill the form'}\n          </h3>\n          <div className={styles.content}>\n            <Form />\n          </div>\n        </div>\n        <Backdrop />\n      </>\n    )\n  );\n};\nconst mapStateToProps = state => ({\n  open: state.formState.userFormModalIsOpen,\n  editingUserId: state.formState.editingUserId,\n});\n\nFormModal.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  editingUserId: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(FormModal);\n","import React from 'react';\nimport './style/index.scss';\nimport Home from './pages/home/home';\nimport FormModal from './modals/formModal/formModal';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n      <FormModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducers, rootSaga } from '../../state';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst devTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f;\n\nconst enhancers = compose(\n  applyMiddleware(...middlewares),\n  devTools\n);\n\nconst store = createStore(reducers, enhancers);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './utils/redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"table_main__1mXED\",\"table\":\"table_table__22P7A\",\"header\":\"table_header__1zG4C\",\"headerRow\":\"table_headerRow__2q9vA\",\"headerCell\":\"table_headerCell__1E5KB\",\"headerTitle\":\"table_headerTitle__2zFjA\",\"body\":\"table_body__1_jvK\",\"bodyRow\":\"table_bodyRow__1arZ8\",\"bodyCell\":\"table_bodyCell__1Xg2G\",\"footerRow\":\"table_footerRow__SQMxu\",\"footerCell\":\"table_footerCell__1FKWr\",\"emptyRow\":\"table_emptyRow__H9IC5\",\"infoText\":\"table_infoText__1cU4q\"};"],"sourceRoot":""}